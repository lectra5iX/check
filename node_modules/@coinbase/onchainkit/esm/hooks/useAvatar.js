import { publicClient } from '../network/client.js';
import { useOnchainActionWithCache } from './useOnchainActionWithCache.js';
import { normalize } from 'viem/ens';
const ensAvatarAction = ensName => async () => {
  try {
    return await publicClient.getEnsAvatar({
      name: normalize(ensName)
    });
  } catch (err) {
    return null;
  }
};
const useAvatar = ensName => {
  const ensActionKey = `ens-avatar-${ensName}` ?? '';
  const _useOnchainActionWith = useOnchainActionWithCache(ensAvatarAction(ensName), ensActionKey),
    ensAvatar = _useOnchainActionWith.data,
    isLoading = _useOnchainActionWith.isLoading;
  return {
    ensAvatar,
    isLoading
  };
};
export { ensAvatarAction, useAvatar };
//# sourceMappingURL=useAvatar.js.map
